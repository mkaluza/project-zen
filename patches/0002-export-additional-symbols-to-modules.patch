From 9c4bcb78ed236a9fc982d95809a91831336ed2c2 Mon Sep 17 00:00:00 2001
From: Marcin Kaluza <marcin.kaluza@trioptimum.com>
Date: Sat, 1 Nov 2014 13:56:11 +0100
Subject: [PATCH 2/3] export additional symbols to modules

---
 kernel/posix-cpu-timers.c | 1 +
 kernel/sched.c            | 2 ++
 kernel/signal.c           | 2 ++
 3 files changed, 5 insertions(+)

diff --git a/kernel/posix-cpu-timers.c b/kernel/posix-cpu-timers.c
index 93d5e4a..39acf10 100644
--- a/kernel/posix-cpu-timers.c
+++ b/kernel/posix-cpu-timers.c
@@ -255,6 +255,7 @@ void thread_group_cputime(struct task_struct *tsk, struct task_cputime *times)
 out:
 	rcu_read_unlock();
 }
+EXPORT_SYMBOL_GPL(thread_group_cputime);
 
 static void update_gt_cputime(struct task_cputime *a, struct task_cputime *b)
 {
diff --git a/kernel/sched.c b/kernel/sched.c
index 6c8be01..f306b06 100644
--- a/kernel/sched.c
+++ b/kernel/sched.c
@@ -4094,6 +4094,7 @@ void thread_group_times(struct task_struct *p, cputime_t *ut, cputime_t *st)
 }
 #endif
 
+EXPORT_SYMBOL_GPL(thread_group_times);
 /*
  * This function gets called by the timer code, with HZ frequency.
  * We call it with interrupts disabled.
@@ -5087,6 +5088,7 @@ int task_prio(const struct task_struct *p)
 {
 	return p->prio - MAX_RT_PRIO;
 }
+EXPORT_SYMBOL(task_prio);
 
 /**
  * task_nice - return the nice value of a given task.
diff --git a/kernel/signal.c b/kernel/signal.c
index f15021b..4fd709c 100644
--- a/kernel/signal.c
+++ b/kernel/signal.c
@@ -1198,6 +1198,8 @@ struct sighand_struct *__lock_task_sighand(struct task_struct *tsk,
 	return sighand;
 }
 
+EXPORT_SYMBOL_GPL(__lock_task_sighand);
+
 /*
  * send signal info to all the members of a group
  */
-- 
2.1.0

